import React, { useState } from ‚Äòreact‚Äô;

const ProteinSynthesisApp = () => {
const [currentStep, setCurrentStep] = useState(1);
const [correctChoices, setCorrectChoices] = useState(0);
const [feedback, setFeedback] = useState(‚Äô‚Äô);
const [showDescription, setShowDescription] = useState(false);
const [showNext, setShowNext] = useState(false);
const [selectedChoices, setSelectedChoices] = useState({});
const [completedSteps, setCompletedSteps] = useState(new Set());
const [rnaPolymerasePosition, setRnaPolymerasePosition] = useState({ x: 20, y: 50 });
const [isDragging, setIsDragging] = useState(false);
const [hasFoundPromoter, setHasFoundPromoter] = useState(false);

const makeChoice = (step, isCorrect, feedbackText) => {
setFeedback(feedbackText);
setSelectedChoices(prev => ({ ‚Ä¶prev, [step]: isCorrect }));

```
if (isCorrect) {
  setCorrectChoices(prev => prev + 1);
  setCompletedSteps(prev => new Set([...prev, step]));
  setTimeout(() => {
    setShowDescription(true);
    setShowNext(true);
  }, 1500);
} else {
  setTimeout(() => {
    setFeedback('');
    setSelectedChoices(prev => ({ ...prev, [step]: null }));
  }, 2000);
}
```

};

const handleMouseMove = (e) => {
if (isDragging && currentStep === 1.5) {
const rect = e.currentTarget.getBoundingClientRect();
const x = ((e.clientX - rect.left) / rect.width) * 100;
const y = ((e.clientY - rect.top) / rect.height) * 100;
setRnaPolymerasePosition({
x: Math.max(5, Math.min(95, x)),
y: Math.max(5, Math.min(95, y))
});

```
  // Check if RNA polymerase is near the promoter (center area)
  if (x > 45 && x < 55 && y > 45 && y < 55 && !hasFoundPromoter) {
    setHasFoundPromoter(true);
    setFeedback('üéâ Perfect! RNA polymerase has found the promoter! Transcription can now begin!');
    setCorrectChoices(prev => prev + 1);
    setCompletedSteps(prev => new Set([...prev, 1.5]));
    setIsDragging(false);
    setTimeout(() => {
      setShowDescription(true);
      setShowNext(true);
    }, 1500);
  }
}
```

};

const nextStep = () => {
if (currentStep === 1) {
setCurrentStep(1.5);
} else if (currentStep === 1.5) {
setCurrentStep(2);
} else if (currentStep < 4) {
setCurrentStep(prev => prev + 1);
}
setFeedback(‚Äô‚Äô);
setShowDescription(false);
setShowNext(false);
};

const previousStep = () => {
if (currentStep === 1.5) {
setCurrentStep(1);
setRnaPolymerasePosition({ x: 20, y: 50 });
setHasFoundPromoter(false);
} else if (currentStep === 2) {
setCurrentStep(1.5);
} else if (currentStep > 1) {
setCurrentStep(prev => prev - 1);
}
setFeedback(‚Äô‚Äô);

```
const prevStep = currentStep === 1.5 ? 1 : currentStep === 2 ? 1.5 : currentStep - 1;
if (completedSteps.has(prevStep)) {
  setShowDescription(true);
  setShowNext(true);
} else {
  setShowDescription(false);
  setShowNext(false);
}
```

};

return (
<div className="min-h-screen bg-gradient-to-br from-indigo-500 to-purple-600 flex items-center justify-center p-4">
<div className="max-w-4xl bg-white rounded-3xl shadow-2xl overflow-hidden">
<div className="bg-gradient-to-r from-pink-500 to-teal-500 text-white p-8 text-center">
<h1 className="text-4xl font-bold mb-4">üß¨ Cellular Adventure: Protein Synthesis Journey!</h1>
<p className="text-xl">Shrink down and explore the amazing world inside a living cell!</p>
</div>

```
    <div className="p-6">
      <div className="w-full bg-gray-200 rounded-full h-3 mb-6">
        <div 
          className="bg-gradient-to-r from-teal-500 to-green-500 h-3 rounded-full transition-all duration-500"
          style={{ width: `${(correctChoices / 4) * 100}%` }}
        ></div>
      </div>

      {/* Step 1: DNA in Nucleus */}
      {currentStep === 1 && (
        <div className="text-center space-y-6">
          <div className="bg-gradient-to-br from-blue-100 to-pink-100 rounded-2xl p-8 min-h-64 flex flex-col items-center justify-center">
            <div className="relative w-80 h-56 mb-6">
              <div className="w-full h-full border-4 border-gray-800 rounded-3xl bg-white bg-opacity-20 relative">
                <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-36 h-28 border-4 border-pink-500 rounded-full bg-pink-200 bg-opacity-50 flex items-center justify-center">
                  <div className="text-4xl animate-spin" style={{ animationDuration: '15s' }}>üß¨</div>
                </div>
                <div className="absolute top-8 left-16 w-2 h-2 bg-pink-500 rounded-full"></div>
                <div className="absolute bottom-8 right-16 w-2 h-2 bg-pink-500 rounded-full"></div>
                <div className="absolute bottom-16 left-12 w-2 h-2 bg-pink-500 rounded-full"></div>
                <div className="absolute top-5 right-24 text-xs">üî¥</div>
                <div className="absolute bottom-6 right-32 text-xs">üî¥</div>
                <div className="absolute top-32 left-20 text-xs">üî¥</div>
              </div>
              <div className="absolute top-2 left-1/2 transform -translate-x-1/2 bg-white bg-opacity-90 px-2 py-1 rounded text-xs font-bold">Cell</div>
              <div className="absolute top-16 left-1/2 transform -translate-x-1/2 bg-pink-500 text-white px-2 py-1 rounded text-xs font-bold">Nucleus</div>
              <div className="absolute bottom-4 right-4 bg-white bg-opacity-90 px-2 py-1 rounded text-xs font-bold">Cytoplasm</div>
            </div>
          </div>

          <div className="bg-white bg-opacity-90 p-6 rounded-xl border-l-4 border-pink-500">
            <p className="text-lg font-semibold text-gray-800">
              You're a nitrogenous base on DNA! Look around - where do you think you are in the cell?
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <button
              onClick={() => makeChoice(1, false, 'The cytoplasm is where proteins are made, but DNA lives elsewhere!')}
              className={`p-4 border-4 border-teal-500 rounded-xl font-semibold transition-all hover:bg-teal-500 hover:text-white hover:-translate-y-1 ${
                selectedChoices[1] === false ? 'bg-red-500 text-white border-red-500' : 'bg-white'
              }`}
              disabled={selectedChoices[1] !== null && selectedChoices[1] !== undefined}
            >
              Cytoplasm
            </button>
            <button
              onClick={() => makeChoice(1, true, 'Exactly! DNA is safely stored in the nucleus, protected by the nuclear envelope!')}
              className={`p-4 border-4 border-teal-500 rounded-xl font-semibold transition-all hover:bg-teal-500 hover:text-white hover:-translate-y-1 ${
                selectedChoices[1] === true ? 'bg-green-500 text-white border-green-500' : 'bg-white'
              }`}
              disabled={selectedChoices[1] !== null && selectedChoices[1] !== undefined}
            >
              Nucleus
            </button>
            <button
              onClick={() => makeChoice(1, false, 'Mitochondria have some DNA, but most genes are in the nucleus!')}
              className={`p-4 border-4 border-teal-500 rounded-xl font-semibold transition-all hover:bg-teal-500 hover:text-white hover:-translate-y-1 ${
                selectedChoices[1] === false ? 'bg-red-500 text-white border-red-500' : 'bg-white'
              }`}
              disabled={selectedChoices[1] !== null && selectedChoices[1] !== undefined}
            >
              Mitochondria
            </button>
          </div>

          {feedback && (
            <div className="bg-green-100 border-2 border-green-500 rounded-xl p-4 text-green-800 font-semibold">
              {feedback}
            </div>
          )}

          {showDescription && (
            <div className="bg-white bg-opacity-80 p-6 rounded-xl border-l-4 border-teal-500 text-left">
              <h2 className="text-2xl font-bold mb-4">üéØ Welcome to the Nucleus!</h2>
              <p className="text-gray-700 mb-4">
                <strong>Perfect choice!</strong> You are a <strong>nitrogenous base</strong> on a DNA strand in the nucleus! 
                Think of DNA as the cell's recipe book üìö. Each recipe (gene) tells the cell how to make a specific protein.
              </p>
              <p className="text-gray-600">
                üîç <strong>Fun Fact:</strong> If you stretched out all the DNA in one human cell, it would be about 6 feet long!
              </p>
            </div>
          )}

          <div className="flex justify-between items-center">
            <button
              onClick={previousStep}
              className="bg-gray-500 text-white px-6 py-3 rounded-full font-bold transition-all hover:-translate-y-1"
              style={{ visibility: currentStep === 1 ? 'hidden' : 'visible' }}
            >
              Back
            </button>
            {showNext && (
              <button
                onClick={nextStep}
                className="bg-gradient-to-r from-pink-500 to-red-500 text-white px-6 py-3 rounded-full font-bold transition-all hover:-translate-y-1"
              >
                Continue the Journey
              </button>
            )}
          </div>
        </div>
      )}

      {/* Step 1.5: Interactive RNA Polymerase */}
      {currentStep === 1.5 && (
        <div className="text-center space-y-6">
          <div 
            className="bg-gradient-to-br from-blue-100 to-indigo-100 rounded-2xl p-8 min-h-80 flex flex-col items-center justify-center relative cursor-pointer"
            onMouseMove={handleMouseMove}
            onMouseLeave={() => setIsDragging(false)}
          >
            <div className="relative w-full h-32">
              {/* DNA strand */}
              <div className="absolute top-16 left-0 right-0 h-8 flex items-center justify-center">
                <div className="flex items-center">
                  <div className="w-20 h-8 bg-gradient-to-r from-blue-400 to-green-400 rounded-l-full flex items-center justify-center">
                    <div className="text-white text-xs font-bold">üß¨</div>
                  </div>
                  <div className="w-20 h-8 bg-gradient-to-r from-green-400 to-blue-400 flex items-center justify-center">
                    <div className="text-white text-xs font-bold">üß¨</div>
                  </div>
                </div>
                
                {/* Promoter region */}
                <div className="relative mx-4">
                  <div className={`w-32 h-8 bg-gradient-to-r from-yellow-400 to-orange-400 flex items-center justify-center rounded border-2 ${hasFoundPromoter ? 'border-green-500 animate-pulse' : 'border-red-500'}`}>
                    <div className="text-white text-xs font-bold">PROMOTER</div>
                  </div>
                  <div className="absolute -top-8 left-1/2 transform -translate-x-1/2 bg-red-500 text-white px-2 py-1 rounded text-xs font-bold">
                    Drop Here!
                  </div>
                  {hasFoundPromoter && (
                    <div className="absolute -bottom-8 left-1/2 transform -translate-x-1/2 text-green-600 text-xs font-bold animate-bounce">
                      ‚úÖ Bound!
                    </div>
                  )}
                </div>
                
                <div className="flex items-center">
                  <div className="w-20 h-8 bg-gradient-to-r from-blue-400 to-green-400 flex items-center justify-center">
                    <div className="text-white text-xs font-bold">üß¨</div>
                  </div>
                  <div className="w-20 h-8 bg-gradient-to-r from-green-400 to-blue-400 rounded-r-full flex items-center justify-center">
                    <div className="text-white text-xs font-bold">üß¨</div>
                  </div>
                </div>
              </div>
              
              {/* Draggable RNA Polymerase */}
              <div 
                className={`absolute w-16 h-12 bg-purple-600 rounded-lg flex flex-col items-center justify-center cursor-grab select-none ${isDragging ? 'cursor-grabbing scale-110 z-10' : ''} ${hasFoundPromoter ? 'animate-pulse' : ''}`}
                style={{ 
                  left: `${rnaPolymerasePosition.x}%`, 
                  top: `${rnaPolymerasePosition.y}%`,
                  transform: 'translate(-50%, -50%)'
                }}
                onMouseDown={(e) => {
                  setIsDragging(true);
                  e.preventDefault();
                }}
              >
                <div className="text-white text-xs font-bold">RNA</div>
                <div className="text-white text-xs font-bold">Pol</div>
              </div>
              
              {!hasFoundPromoter && (
                <div className="absolute -bottom-4 left-4 text-purple-600 text-sm font-bold animate-bounce">
                  üëÜ Drag me to the promoter!
                </div>
              )}
            </div>
            
            <div className="mt-8 bg-white bg-opacity-80 rounded-lg p-4">
              <div className="text-lg font-bold mb-2 text-center text-purple-700">
                üéÆ Interactive Challenge!
              </div>
              <div className="text-center text-gray-700">
                {!hasFoundPromoter ? 
                  "Drag the RNA polymerase to the promoter region to begin transcription!" :
                  "Great job! RNA polymerase is now bound and ready to transcribe!"
                }
              </div>
            </div>
          </div>

          {feedback && (
            <div className="bg-green-100 border-2 border-green-500 rounded-xl p-4 text-green-800 font-semibold animate-pulse">
              {feedback}
            </div>
          )}

          {showDescription && (
            <div className="bg-purple-100 border-2 border-purple-400 rounded-xl p-4 text-purple-800 text-left">
              <h3 className="font-bold mb-2">üéâ Transcription Initiated!</h3>
              <p className="text-sm">RNA polymerase has successfully bound to the promoter and transcription can now begin!</p>
            </div>
          )}

          <div className="flex justify-between items-center">
            <button
              onClick={previousStep}
              className="bg-gray-500 text-white px-6 py-3 rounded-full font-bold transition-all hover:-translate-y-1"
            >
              Back
            </button>
            {showNext && (
              <button
                onClick={nextStep}
                className="bg-gradient-to-r from-purple-500 to-indigo-500 text-white px-6 py-3 rounded-full font-bold transition-all hover:-translate-y-1"
              >
                Watch Transcription Begin
              </button>
            )}
          </div>
        </div>
      )}

      {/* Step 2: Promoter Region with mRNA synthesis */}
      {currentStep === 2 && (
        <div className="text-center space-y-6">
          <div className="bg-gradient-to-br from-yellow-100 to-orange-100 rounded-2xl p-8 min-h-80 flex flex-col items-center justify-center">
            <div className="relative mb-6">
              <div className="absolute -top-12 left-1/2 transform -translate-x-1/2 bg-blue-600 text-white px-4 py-2 rounded-lg font-bold text-sm">
                RNA Polymerase
              </div>
              
              <div className="flex items-center mb-2">
                <span className="text-sm font-bold mr-2 text-gray-600">Template 3'</span>
                <div className="flex space-x-1">
                  <span className="w-8 h-8 bg-green-500 text-white rounded flex items-center justify-center text-sm font-bold">A</span>
                  <span className="w-8 h-8 bg-blue-500 text-white rounded flex items-center justify-center text-sm font-bold">T</span>
                  <span className="w-8 h-8 bg-red-500 text-white rounded flex items-center justify-center text-sm font-bold">G</span>
                  <span className="w-8 h-8 bg-purple-500 text-white rounded flex items-center justify-center text-sm font-bold">C</span>
                  <span className="w-8 h-8 bg-green-500 text-white rounded flex items-center justify-center text-sm font-bold">A</span>
                </div>
                <span className="text-sm font-bold ml-2 text-gray-600">5'</span>
              </div>
              
              <div className="flex justify-center space-x-1 mb-2">
                {[...Array(5)].map((_, i) => (
                  <div key={i} className="w-8 text-center text-gray-400 text-xs">|</div>
                ))}
              </div>
              
              <div className="flex items-center mb-4">
                <span className="text-sm font-bold mr-2 text-orange-600">mRNA 5'</span>
                <div className="flex space-x-1">
                  <span className="w-8 h-8 bg-orange-400 text-white rounded flex items-center justify-center text-sm font-bold">U</span>
                  <span className="w-8 h-8 bg-orange-400 text-white rounded flex items-center justify-center text-sm font-bold">A</span>
                  <span className="w-8 h-8 bg-orange-400 text-white rounded flex items-center justify-center text-sm font-bold">C</span>
                  <span className="w-8 h-8 bg-orange-400 text-white rounded flex items-center justify-center text-sm font-bold animate-pulse">G</span>
                  <span className="w-6 h-6 border-2 border-dashed border-orange-400 rounded flex items-center justify-center text-xs text-orange-400 animate-pulse">?</span>
                </div>
                <span className="text-sm font-bold ml-2 text-orange-600">3'</span>
              </div>
            </div>
          </div>

          <div className="bg-white bg-opacity-90 p-6 rounded-xl border-l-4 border-orange-500">
            <p className="text-lg font-semibold text-gray-800">
              RNA polymerase is reading the DNA template and building complementary mRNA. What happens when it reaches the end of the gene?
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <button
              onClick={() => makeChoice(2, false, 'The mRNA needs processing before it can leave!')}
              className={`p-4 border-4 border-teal-500 rounded-xl font-semibold transition-all hover:bg-teal-500 hover:text-white hover:-translate-y-1 ${
                selectedChoices[2] === false ? 'bg-red-500 text-white border-red-500' : 'bg-white'
              }`}
              disabled={selectedChoices[2] !== null && selectedChoices[2] !== undefined}
            >
              mRNA leaves immediately
            </button>
            <button
              onClick={() => makeChoice(2, true, 'Exactly! The raw mRNA transcript needs editing before it can be used!')}
              className={`p-4 border-4 border-teal-500 rounded-xl font-semibold transition-all hover:bg-teal-500 hover:text-white hover:-translate-y-1 ${
                selectedChoices[2] === true ? 'bg-green-500 text-white border-green-500' : 'bg-white'
              }`}
              disabled={selectedChoices[2] !== null && selectedChoices[2] !== undefined}
            >
              mRNA gets processed
            </button>
            <button
              onClick={() => makeChoice(2, false, 'Translation happens later on ribosomes!')}
              className={`p-4 border-4 border-teal-500 rounded-xl font-semibold transition-all hover:bg-teal-500 hover:text-white hover:-translate-y-1 ${
                selectedChoices[2] === false ? 'bg-red-500 text-white border-red-500' : 'bg-white'
              }`}
              disabled={selectedChoices[2] !== null && selectedChoices[2] !== undefined}
            >
              Translation begins
            </button>
          </div>

          {feedback && (
            <div className="bg-green-100 border-2 border-green-500 rounded-xl p-4 text-green-800 font-semibold">
              {feedback}
            </div>
          )}

          {showDescription && (
            <div className="bg-white bg-opacity-80 p-6 rounded-xl border-l-4 border-teal-500 text-left">
              <h2 className="text-2xl font-bold mb-4">üìù mRNA Processing Required!</h2>
              <p className="text-gray-700">
                <strong>Perfect!</strong> The freshly made mRNA needs processing before it can be used to make proteins. 
                This includes removing introns and adding protective caps!
              </p>
            </div>
          )}

          <div className="flex justify-between items-center">
            <button
              onClick={previousStep}
              className="bg-gray-500 text-white px-6 py-3 rounded-full font-bold transition-all hover:-translate-y-1"
            >
              Back
            </button>
            {showNext && (
              <button
                onClick={nextStep}
                className="bg-gradient-to-r from-orange-500 to-red-500 text-white px-6 py-3 rounded-full font-bold transition-all hover:-translate-y-1"
              >
                Continue Adventure
              </button>
            )}
          </div>
        </div>
      )}
    </div>
  </div>
</div>
```

);
};

export default ProteinSynthesisApp;
